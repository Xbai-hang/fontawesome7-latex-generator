name: update FontAwesome LaTeX package

on:
  schedule:
    - cron: '0 10 * * 1'           # 每周一上午10点
  workflow_dispatch:               # 手动触发

jobs:
  update:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y texlive-latex-base make curl jq
          
      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Check for new FontAwesome version
        id: version_check
        run: |
          # 获取最新版本
          LATEST=$(curl -s https://api.github.com/repos/FortAwesome/Font-Awesome/releases/latest | jq -r '.tag_name')
          echo "latest=$LATEST" >> $GITHUB_OUTPUT
          
          # 检查本地版本
          if [ -f "FONTAWESOME7-VERSION" ]; then
            LOCAL=$(cat FONTAWESOME7-VERSION)
            echo "local=$LOCAL" >> $GITHUB_OUTPUT
          else
            LOCAL="none"
            echo "local=none" >> $GITHUB_OUTPUT
          fi
          
          # 判断是否需要更新
          if [ "$LOCAL" != "$LATEST" ]; then
            echo "需要更新: $LOCAL -> $LATEST"
            echo "need_update=true" >> $GITHUB_OUTPUT
          else
            echo "版本相同，跳过更新"
            echo "need_update=false" >> $GITHUB_OUTPUT
          fi
          
      - name: Run `generator.py` script file
        if: steps.version_check.outputs.need_update == 'true'
        run: |
          echo "执行Python脚本..."
          python generator.py
          
      - name: Build
        if: steps.version_check.outputs.need_update == 'true'
        run: |
          # 进入生成的目录
          if [ -d "fontawesome7-latex-latest" ]; then
            cd fontawesome7-latex-latest
            echo "开始构建..."
            make
            echo "清理临时文件..."
            make clean
            cd ..
          else
            echo "错误: 未找到生成的目录"
            exit 1
          fi
          
      - name: Update `FONTAWESOME7-VERSION` file
        if: steps.version_check.outputs.need_update == 'true'
        run: |
          echo "${{ steps.version_check.outputs.latest }}" > FONTAWESOME7-VERSION
          
      - name: Commit and push changes
        if: steps.version_check.outputs.need_update == 'true'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "build: for fontawesome ${{ steps.version_check.outputs.latest }}"
